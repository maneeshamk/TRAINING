{
  "version": 3,
  "sources": ["angular:jit:template:src\\app\\component\\body\\body.component.html", "angular:jit:style:src\\app\\component\\body\\body.component.css", "src/app/component/body/body.component.ts", "src/app/component/body/body.component.spec.ts"],
  "sourcesContent": ["<p>body works!/p>\n{{content}}\n\n<div *ngIf=\"link=='hobby'\">\n  <app-hobbies [myhobbies]=\"myhobbies\"></app-hobbies>\n    </div>\n    <div *ngIf=\"link=='fav'\">\n      <app-favourite></app-favourite>\n    </div>", "/* src/app/component/body/body.component.css */\n/*# sourceMappingURL=body.component.css.map */\n", "import { Component,Input } from '@angular/core';\n\n@Component({\n  selector: 'app-body',\n  standalone: false,\n  templateUrl: './body.component.html',\n  styleUrl: './body.component.css'\n})\nexport class BodyComponent {\n  @Input() link: string = '';\n  @Input() myhobbies: any[] = [];\n  content: string = '';\n\n  ngOnChanges() {\n    switch (this.link) {\n      case 'hobby':\n        this.content = 'My hobbies include reading, travelling, and coding.';\n        break;\n      case 'new':\n        this.content = 'I am exploring new hobbies like painting and hiking.';\n        break;\n      case 'fav':\n        this.content = 'My favorite hobby is reading mystery novels.';\n        break;\n      default:\n        this.content = 'Please select a hobby from the menu.';\n    }\n  } \n\n}\n", "import { ComponentFixture, TestBed } from '@angular/core/testing';\n\nimport { BodyComponent } from './body.component';\n\ndescribe('BodyComponent', () => {\n  let component: BodyComponent;\n  let fixture: ComponentFixture<BodyComponent>;\n\n  beforeEach(async () => {\n    await TestBed.configureTestingModule({\n      declarations: [BodyComponent]\n    })\n    .compileComponents();\n\n    fixture = TestBed.createComponent(BodyComponent);\n    component = fixture.componentInstance;\n    fixture.detectChanges();\n  });\n\n  it('should create', () => {\n    expect(component).toBeTruthy();\n  });\n});\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;ACAA,IAAAA;AAAA,IAAAC,uBAAA;AAAA;AAAA,IAAAD,0BAAA;AAAA;AAAA;;;ICQa;;;;;;;AARb;AAQO,IAAM,gBAAN,MAAME,eAAa;MACf,OAAe;MACf,YAAmB,CAAA;MAC5B,UAAkB;MAElB,cAAW;AACT,gBAAQ,KAAK,MAAM;UACjB,KAAK;AACH,iBAAK,UAAU;AACf;UACF,KAAK;AACH,iBAAK,UAAU;AACf;UACF,KAAK;AACH,iBAAK,UAAU;AACf;UACF;AACE,iBAAK,UAAU;QACnB;MACF;;uBAlBC,MAAK,CAAA;4BACL,MAAK,CAAA;;;AAFK,oBAAa,WAAA;MANzB,UAAU;QACT,UAAU;QACV,YAAY;QACZ,UAAA;;OAED;OACY,aAAa;;;;;ACR1B;;;AAEA,IAAAC;AAEA,aAAS,iBAAiB,MAAK;AAC7B,UAAI;AACJ,UAAI;AAEJ,iBAAW,MAAW;AACpB,cAAM,QAAQ,uBAAuB;UACnC,cAAc,CAAC,aAAa;SAC7B,EACA,kBAAiB;AAElB,kBAAU,QAAQ,gBAAgB,aAAa;AAC/C,oBAAY,QAAQ;AACpB,gBAAQ,cAAa;MACvB,EAAC;AAED,SAAG,iBAAiB,MAAK;AACvB,eAAO,SAAS,EAAE,WAAU;MAC9B,CAAC;IACH,CAAC;;;",
  "names": ["body_component_default", "init_body_component", "BodyComponent", "init_body_component"]
}
